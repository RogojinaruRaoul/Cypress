{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-27T13:48:23.652Z",
    "end": "2021-11-27T13:48:31.322Z",
    "duration": 7670,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "37eb8b7c-1353-4f89-a3ce-3193336d83c8",
      "title": "",
      "fullFile": "cypress/integration/DemoTest/test.js",
      "file": "cypress/integration/DemoTest/test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e117a738-ac4f-4491-ad8c-3c1028fcf599",
          "title": "My first test suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My fist test case",
              "fullTitle": "My first test suite My fist test case",
              "timedOut": null,
              "duration": 5690,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(Cypress.env(\"url\") + \"/seleniumPractise/#/\");\ncy.get(\".search-keyword\").type(\"ca\");\ncy.wait(2000);\ncy.get(\".product:visible\").should(\"have.length\", 4); //parent-child chain\ncy.get(\".products\").find(\".product\").should(\"have.length\", 4);\ncy.get(\".products\").find(\".product\").should(\"have.length\", 4);\ncy.get(\".products\").find(\".product\").eq(1).contains(\"ADD TO CART\").click();\ncy.get(\".products\").find(\".product\").each(($el, index, $list) => {\n  const textVeg = $el.find(\"h4.product.name\").text();\n  if (textVeg.includes(\"Cashews\")) {\n    cy.wrap($el).find(\"button\").click();\n  }\n});",
              "err": {},
              "uuid": "17ffb6ee-1914-475a-8e15-abd63e56dbbc",
              "parentUUID": "e117a738-ac4f-4491-ad8c-3c1028fcf599",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "17ffb6ee-1914-475a-8e15-abd63e56dbbc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5690,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "charts": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/report/mochawesome-report"
      },
      "version": "6.0.1"
    }
  }
}