{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-27T13:48:35.040Z",
    "end": "2021-11-27T13:48:42.515Z",
    "duration": 7475,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "40ef7656-5832-4998-8640-b1ad7c64c8b0",
      "title": "",
      "fullFile": "cypress/integration/DemoTest/Test1.js",
      "file": "cypress/integration/DemoTest/Test1.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f58b8eb5-ce98-4a2f-a7f7-6778268679f9",
          "title": "My first TestSuite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "My first TestCase",
              "fullTitle": "My first TestSuite My first TestCase",
              "timedOut": null,
              "duration": 14,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//All test steps are written here\n    // expect(true).to.equal(false);",
              "err": {},
              "uuid": "eb26cb96-078e-42b5-a036-af86b3d21400",
              "parentUUID": "f58b8eb5-ce98-4a2f-a7f7-6778268679f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "My second TestCase",
              "fullTitle": "My first TestSuite My second TestCase",
              "timedOut": null,
              "duration": 5784,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Write test steps\ncy.visit(Cypress.env(\"url\") + \"/seleniumPractise/#/\");\ncy.get(\".search-keyword\").type(\"ca\"); //When we donâ€™t have any load animations we shoud use the cy.wait(ms) method.\ncy.wait(2000); //In selenium get is used for reaching a URL in the browser.\n//In Cypress get acts like find element.\n//should is an assertion-> the number of elements with class=product should be 4.\ncy.get(\".product:visible\").should(\"have.length\", 4); //create a variable using \"as\"\ncy.get(\".products\").as(\"products\"); //Parent- Child chaining\ncy.get(\"@products\").find(\".product\").should(\"have.length\", 4);\ncy.get(\"@products\").find(\".product\").eq(1).contains(\"ADD TO CART\").click().then(() => {\n  console.log(\"JavaScript method\");\n}); // cy.get(\".products\")\n//   .find(\".product\")\n//   .contains(\"Cashews\")\n//   .get(\":nth-child(4) > .product-action > button\")\n//   .click();\n//.each is a method used to iterate trough a list and search for a element\ncy.get(\"@products\").find(\".product\").each(($el, index, $list) => {\n  const textVeg = $el.find(\"h4.product-name\").text();\n  if (textVeg.includes(\"Cashews\")) {\n    cy.wrap($el).find(\"button\").click();\n  }\n}); //assert if logo text is correctly displayed\ncy.get(\".brand.greenLogo\").should(\"have.text\", \"GREENKART\"); //this is to create a variable and print in logs\ncy.get(\".brand.greenLogo\").then(function (logoelement) {\n  cy.log(logoelement.text());\n});\ncy.get(\".cart-icon > img\").click(); // cy.get(\".action-block\").find(\":nth-child(14)\").click();\n// cy.get(\":nth-child(14)\");",
              "err": {},
              "uuid": "a5c7ced4-2c76-473e-bb05-bcb5ad5990ca",
              "parentUUID": "f58b8eb5-ce98-4a2f-a7f7-6778268679f9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eb26cb96-078e-42b5-a036-af86b3d21400",
            "a5c7ced4-2c76-473e-bb05-bcb5ad5990ca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5798,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "charts": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/report/mochawesome-report"
      },
      "version": "6.0.1"
    }
  }
}